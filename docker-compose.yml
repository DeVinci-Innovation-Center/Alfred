services:

  frontend:
    image: alfred-frontend:dev
    build: ./userspace/gui
    ports:
      - 80:3000
    networks:
      - server-tier

  backend:
    privileged: true
    image: alfred-backend:dev
    build:
      context: ./userspace/applications
      # choose between cpu and gpu according to your machine
      dockerfile: Dockerfile.cpu
      # dockerfile: Dockerfile.gpu
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
      - DISPLAY=$DISPLAY
      - QT_X11_NO_MITSHM=1

      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=

      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_USERNAME=root
      - MONGODB_PASSWORD=root
      - MONGODB_DATABASE=commands
    ports:
      - 8000:8000
    networks:
      - server-tier
      - database-tier
      - controller-tier
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./userspace/applications/src:/home/appuser/app/src # for dev
    # configs:
    #   - httpd-config
    # secrets:
    #   - server-certificate
    # uncomment if your device has gpu capabilities
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #       - driver: nvidia
    #         count: 1
    #         capabilities: [gpu]


  controller:
    privileged: true
    image: alfred-controller:dev
    build:
      context: ./kernel/controller
      # choose between cpu and gpu according to your machine
      dockerfile: Dockerfile.cpu
      # dockerfile: Dockerfile.gpu
    environment:
      - DISPLAY=$DISPLAY
      - QT_X11_NO_MITSHM=1

      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_CHANNEL=command-robot

      - MOVE_ARM=False
      - ARM_IP=
    networks:
      - server-tier
      - database-tier
      - controller-tier
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    # uncomment if your machine has gpu capabilities
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #       - driver: nvidia
    #         count: 1
    #         capabilities: [gpu]


  drivers:
    privileged: true
    image: alfred-drivers:dev
    build: ./kernel/drivers
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    networks:
      - database-tier

  redis:
    image: docker.io/bitnami/redis:6.2
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    # ports:
    #   - '6379:6379'
    networks:
      - database-tier
    volumes:
      - ./kernel/database-files/redis-data:/bitnami/redis/data

  mongodb:
    image: mongo:5
    restart: always
    ports:
      - "27017:27017"
    # env_file:
    #   - .env
    environment:
      #   - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      #   - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      #   - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=commands
    networks:
      - database-tier
    volumes:
      - ./kernel/database-files/mongodb-data/mongod.conf:/etc/mongod.conf
      - ./kernel/database-files/mongodb-data/initdb.d/:/docker-entrypoint-initdb.d/
      - ./kernel/database-files/mongodb-data/data/db/:/data/db/
      - ./kernel/database-files/mongodb-data/data/log/:/var/log/mongodb/
  # redis-listener:
  #   image: alfred-redis-listener:dev
  #   build: ./kernel/redis-listener
  #   depends_on:
  #     - mongodb
  #     - redis
  #   environment:
  #     - MONGODB_HOST=mongodb
  #     - MONGODB_PORT=27017
  #     - MONGODB_USERNAME=root
  #     - MONGODB_PASSWORD=root
  #     - MONGODB_DATABASE=commands

  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - REDIS_PASSWORD=
  #   networks:
  #     - database-tier
















  # # configs:
  # #   httpd-config:
  # #     external: true

  # # secrets:
  # #   server-certificate:
  # #     external: true









networks:
  server-tier:
    # server network
    ipam:
      config:
        - subnet: 172.16.237.0/24
          gateway: 172.16.237.1
  database-tier:
    # communication between databases
    ipam:
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
  controller-tier:
    # network with controller
    ipam:
      config:
        - subnet: 172.16.239.0/24
          gateway: 172.16.239.1
